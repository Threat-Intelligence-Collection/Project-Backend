name: Docker Compose CI

on:
  push:
    branches: ["Docker_Compose"]
  pull_request:
    branches: ["Docker_Compose"]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Create .env file
      run: |
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "ABUSE_IPDB_API_KEY=${{ secrets.ABUSE_IPDB_API_KEY }}" >> .env
        echo "VIRUS_TOTAL_API_KEY=${{ secrets.VIRUS_TOTAL_API_KEY }}" >> .env
        echo "CRIMINAL_IP_API_KEY=${{ secrets.CRIMINAL_IP_API_KEY }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "DB_HOST=postgres" >> .env
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_APP_USER=${{ secrets.POSTGRES_APP_USER }}" >> .env
        echo "POSTGRES_APP_PASSWORD=${{ secrets.POSTGRES_APP_PASSWORD }}" >> .env
        
    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/project-api:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/project-api:${{ github.sha }}
        
    - name: Test Docker Compose
      run: |
        docker network create project-network || true
        docker compose up -d
        docker compose ps
        sleep 30  # Increased wait time to ensure database is ready
        docker compose logs
        if ! docker compose ps | grep -q "running"; then
          echo "Containers are not running properly"
          docker compose logs
          exit 1
        fi
        docker compose down
